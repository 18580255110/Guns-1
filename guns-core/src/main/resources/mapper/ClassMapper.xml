<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stylefeng.guns.modular.system.dao.ClassMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.stylefeng.guns.modular.system.model.Class">
        <id column="id" property="id" />
        <result column="code" property="code" />
        <result column="name" property="name" />
        <result column="grade" property="grade" />
        <result column="academic_year" property="academicYear" />
        <result column="cycle" property="cycle" />
        <result column="ability" property="ability" />
        <result column="begin_date" property="beginDate" />
        <result column="end_date" property="endDate" />
        <result column="cross_start_date" property="crossStartDate" />
        <result column="cross_end_date" property="crossEndDate" />
        <result column="duration" property="duration" />
        <result column="period" property="period" />
        <result column="class_room_code" property="classRoomCode" />
        <result column="class_room" property="classRoom" />
        <result column="course_code" property="courseCode" />
        <result column="course_name" property="courseName" />
        <result column="star" property="star" />
        <result column="quato" property="quato" />
        <result column="sign_start_date" property="signStartDate" />
        <result column="sign_end_date" property="signEndDate" />
        <result column="status" property="status" />
        <result column="teacher" property="teacher" />
        <result column="teacher_code" property="teacherCode" />
        <result column="teacher_second" property="teacherSecond" />
        <result column="teacher_second_code" property="teacherSecondCode" />
        <result column="study_time_desp" property="studyTimeDesp" />
        <result column="signable" property="signable" />
        <result column="examinable" property="examinable" />
        <result column="crossable" property="crossable" />
        <result column="presign_source_class_code" property="presignSourceClassCode" />
        <result column="presign_start_date" property="presignStartDate" />
        <result column="presign_end_date" property="presignEndDate" />
        <result column="presign_status" property="presignStatus" />
        <result column="create_date" property="createDate" />
        <result column="signQuato" property="signQuato" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        tc.id, tc.code, tc.name, tc.grade, tc.academic_year, tc.cycle, tc.ability, tc.begin_date, tc.end_date, tc.cross_start_date, tc.cross_end_date, tc.duration, tc.period, tc.class_room_code, tc.class_room, tc.course_code, tc.course_name, tc.star, tc.price, tc.quato, tc.sign_start_date, tc.sign_end_date, tc.status, tc.teacher, tc.teacher_code, tc.teacher_second, tc.teacher_second_code, tc.study_time_desp, tc.signable, tc.examinable, tc.crossable, tc.presign_source_class_code, tc.presign_start_date, tc.presign_end_date, tc.presign_status, tc.create_date
    </sql>

    <!-- 查询结果列 -->
    <sql id="Column_List">
        tc.id, tc.code, tc.name, tc.grade, tc.academic_year as academicYear, tc.cycle, tc.ability, tc.begin_date as beginDate, tc.end_date as endDate, tc.cross_start_date as crossStartDate, tc.cross_end_date as crossEndDate, tc.duration, tc.period, tc.class_room_code as classRoomCode, tc.class_room as classRoom, tc.course_code as courseCode, tc.course_name as courseName, tc.star, tc.price, tc.quato, tc.sign_start_date as signStartDate, tc.sign_end_date as signEndDate, tc.status, tc.teacher, tc.teacher_code as teacherCode, tc.teacher_second as teacherSecond, tc.teacher_second_code as teacherSecondCode, tc.study_time_desp as studyTimeDesp, tc.signable, tc.examinable, tc.crossable, tc.presign_source_class_code as presignSourceClassCode, tc.presign_start_date as presignStartDate, tc.presign_end_date as presignEndDate, tc.presign_status as presignStatus, tc.create_date as createDate
    </sql>

    <sql id="Where_Sql">
        <where>
                tcr.code = tc.course_code
            <if test="classPlanList.size() > 0">
                and tc.code = sc.class_code and sc.status = 1
            </if>
            <!-- 班级名称 -->
            <if test="null != name">
                and tc.name like CONCAT('%',#{name},'%')
            </if>
            <!-- 状态 -->
            <if test="null != status">
                and tc.status = #{status}
            </if>
            <!-- 学科 -->
            <if test="subjectList.size() > 0">
                and tcr.subject in
                <foreach collection="subjectList" item="subject" open="(" separator="," close=")">
                    #{subject}
                </foreach>
            </if>
            <!-- 学年 -->
            <if test="null != academicYear">
                and tc.academic_year = #{academicYear}
            </if>
            <!-- 学期 -->
            <if test="cycleList.size() > 0">
                and tc.cycle in
                <foreach collection="cycleList" item="cycle" open="(" separator="," close=")">
                    #{cycle}
                </foreach>
            </if>
            <!-- 班次 -->
            <if test="abilityList.size() > 0">
                and tc.ability in
                <foreach collection="abilityList" item="ability" open="(" separator="," close=")">
                    #{ability}
                </foreach>
            </if>
            <!-- 授课方式 -->
            <if test="methodList.size() > 0">
                and tcr.method in
                <foreach collection="methodList" item="method" open="(" separator="," close=")">
                    #{method}
                </foreach>
            </if>
            <!-- 周几 -->
            <if test="weekList.size() > 0">
                and exists (select 1 from tb_schedule_class where class_code = tc.code and week in
                <foreach collection="weekList" item="week" open="(" separator="," close=")">
                    #{week}
                </foreach>
                )
            </if>
            <!-- 年级 -->
            <if test="gradeList.size() > 0">
                and tc.grade in
                <foreach collection="gradeList" item="grade" open="(" separator="," close=")">
                    #{grade}
                </foreach>
            </if>

            <!-- 老师 -->
            <if test="teacherList.size() > 0">
                and ( tc.teacher_code in
                <foreach collection="teacherList" item="teacher" open="(" separator="," close=")">
                    #{teacher}
                </foreach>

                or tc.teacher_second_code in
                <foreach collection="teacherList" item="teacher" open="(" separator="," close=")">
                    #{teacher}
                </foreach>
                )
            </if>
            <!-- 上课日期 -->
            <if test="classPlanList.size() > 0">
                and (
                <foreach collection="classPlanList" item="classPlan" open="" separator=" or " close="">
                    sc.study_date = #{classPlan}
                </foreach>
                )
            </if>

            <!-- 授课老师 -->
            <if test="null != teacherCode">
                and tc.teacher_code = #{teacherCode}
            </if>

            <if test="null != teacher">
                and tc.teacher like CONCAT('%',#{teacher},'%')
            </if>

            <if test="null != teacherQueryString">
                and
                (tc.teacher_code = #{teacherQueryString}
                or tc.teacher like CONCAT('%',#{teacherQueryString},'%')
                or tc.teacher_second_code = #{teacherQueryString}
                or tc.teacher_second like CONCAT('%',#{teacherQueryString},'%')
                )
            </if>

            <!-- 辅导老师 -->
            <if test="null != assisterCode">
                and tc.teacher_second_code = #{assisterCode}
            </if>

            <if test="null != assister">
                and tc.teacher_second like CONCAT('%',#{assister},'%')
            </if>

            <!-- 报名时间 -->
            <if test="null != signDate">
                <![CDATA[
                and tc.sign_start_date <= #{signDate} and tc.sign_end_date >= #{signDate}
                and tc.end_date >= #{signDate}
                ]]>
            </if>

            <!-- 强制报名时间限制 -->
            <if test="null != forceSignEndDate">
                <![CDATA[
                and tc.end_date > #{forceSignEndDate}
                ]]>
            </if>

            <if test="null != forceSignEndTime">
                <![CDATA[
                and not exists (select 1 from (select a.study_date, b.class_time from (select max(study_date) as study_date from tb_schedule_class where class_code = tc.code ) a left join tb_schedule_class b on a.study_date = b.study_date and b.class_code = tc.code ) aa where aa.study_date = tc.end_date and aa.class_time < #{forceSignEndTime})
                ]]>
            </if>

            <!-- 跨报转班时间 -->
            <if test="null != crossChangeDate">
                <![CDATA[
                and (
                  tc.crossable = 1 and tc.cross_start_date <= #{crossChangeDate} and tc.cross_end_date >= #{crossChangeDate} and tc.end_date > #{crossChangeDate}
                )
                ]]>
            </if>

            <!-- 转班时间 -->
            <if test="null != changeDate">
                <![CDATA[
                and (
                  (tc.crossable = 1 and tc.cross_end_date < #{changeDate} and tc.end_date > #{changeDate}) or tc.end_date > #{changeDate}
                )
                ]]>
            </if>

            <!-- 跨报时间 -->
            <if test="null != crossDate">
                and tc.cross_start_date &lt;= #{crossDate} and tc.cross_end_date &gt;= #{crossDate}
            </if>

            <!-- 即将报名时间段- 开始 -->
            <if test="null != signFutureBeginDate">
                and tc.sign_start_date &gt;= #{signFutureBeginDate}
            </if>

            <if test="null != signFutureEndDate">
                and tc.sign_end_date &lt;= #{signFutureEndDate}
            </if>

            <if test="null != signCompleteDate">
                and tc.sign_end_date &lt; #{signCompleteDate}
            </if>

            <!-- 是否开放报名 -->
            <if test="null != signable">
                and tc.signable = #{signable}
            </if>

            <!-- 是否开放跨报 -->
            <if test="null != crossable">
                and tc.crossable = #{crossable}
            </if>

            <!-- 最小金额 -->
            <if test="null != minPrice">
                and tc.price &gt;= #{minPrice}
            </if>

            <!-- 最大金额 -->
            <if test="null != maxPrice">
                and tc.price &lt;= #{maxPrice}
            </if>

            <!-- 是否需要入学测试 -->
            <if test="null != examinable">
                and tc.examinable = #{examinable}
            </if>
            <!-- 第一节课时间 -->
            <if test="null != beginDate">
                <![CDATA[
                and tc.begin_date > #{beginDate}
                ]]>
            </if>
            <!-- noSigned -->
            <if test="null != noSigned">
                and not EXISTS (select 1 from tb_student_class where class_code = tc.code and student_code = #{studentCode} and status = 1)
            </if>
        </where>
    </sql>

    <sql id="Page_Sql">
        <if test="null != pageRequest">
            limit #{offset}, #{size}
        </if>
    </sql>

    <!-- 分页查询 -->
    <select id="selectPageList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
        select a.*, IFNULL(b.sign_quato, 0) AS signQuato from (
        select tcr.subject,
        <include refid="Column_List"/>
        from tb_class tc, tb_course tcr
        <choose>
            <when test="classPlanList.size() > 0 ">
                , tb_schedule_class sc
            </when>
        </choose>
        <include refid="Where_Sql"/>
        ) a left join (select a.code as class_code, count(a.code) as sign_quato from tb_class a left join tb_student_class b on a.code = b.class_code where b.status = 1 group by a.code) b
        on a.code = b.class_code order by a.createDate desc
    </select>

    <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select t.* from (
        select a.*, IFNULL(b.sign_quato, 0) AS signQuato from (
        select tcr.subject,
        <include refid="Base_Column_List"/>
        from tb_class tc, tb_course tcr
        <choose>
            <when test=" classPlanList.size() > 0 ">
                , tb_schedule_class sc
            </when>
        </choose>
        <include refid="Where_Sql"/>
        ) a left join (select a.code as class_code, count(a.code) as sign_quato from tb_class a left join
        tb_student_class b on a.code = b.class_code where b.status = 1 group by a.code) b
        on a.code = b.class_code
        ) t
        <include refid="Page_Sql" />
    </select>

    <!-- 查询在途订单数量 -->
    <select id="queryOrderingSignCount" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        select count(*) as signCount from tb_order_item a, tb_order b where a.order_no = b.accept_no and  a.item_object = 1 and a.item_object_code = #{classCode} and b.status = 1 and pay_status in (-1, 0)
    </select>
</mapper>
